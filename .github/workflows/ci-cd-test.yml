name: Deploy to Test Environment

on:
  push:
    branches: [develop_deploy_pipeline]  # 현재 브랜치명으로 변경

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # v4로 업그레이드

      - name: Login to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build and Push Backend
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ github.sha }} ./backend_py
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ github.sha }}

      - name: Deploy Backend to App Service
        uses: azure/webapps-deploy@v3  # v3으로 업그레이드
        with:
          app-name: ${{ secrets.BACKEND_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ github.sha }}

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # v4로 업그레이드

      - name: Setup Node.js 18
        uses: actions/setup-node@v4  # v4로 업그레이드, 캐시 제거
        with:
          node-version: '18'
          # cache 설정 완전 제거로 에러 해결

      - name: Build Frontend
        run: |
          cd frontend
          npm ci --legacy-peer-deps  # npm install 대신 ci 사용
          VITE_API_URL=${{ secrets.FRONTEND_API_URL }} npm run build
          ls -la dist/

      - name: Deploy to Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/frontend"
          output_location: "dist"
          skip_app_build: true
