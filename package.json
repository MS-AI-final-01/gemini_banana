{
    "name":  "ai-virtual-try-on-monorepo",
    "private":  true,
    "version":  "1.0.0",
    "description":  "AI Virtual Try-On application with separated backend and frontend",
    "type":  "module",
    "workspaces":  [
                       "backend",
                       "frontend"
                   ],
    "scripts":  {
                    "dev":  "concurrently --names \"BACKEND,FRONTEND\" --prefix-colors \"blue,green\" \"npm run dev:backend\" \"npm run dev:frontend\"",
                    "dev:py":  "concurrently --names \"PY,FRONTEND\" --prefix-colors \"magenta,green\" \"npm run dev:backend-py\" \"npm run dev:frontend:py\"",
                    "dev:ordered":  "node scripts/dev.js",
                    "dev:backend":  "cd backend \u0026\u0026 npm run dev",
                    "dev:backend-py":  "cd backend_py \u0026\u0026 python -m uvicorn app.main:app --reload --host 0.0.0.0 --port 3001",
                    "dev:frontend":  "cd frontend \u0026\u0026 npm run dev",
                    "dev:frontend:py":  "cd frontend \u0026\u0026 cross-env VITE_API_URL=http://localhost:3001 npm run dev",
                    "dev:backend-only":  "cd backend \u0026\u0026 npm run dev",
                    "dev:frontend-only":  "cd frontend \u0026\u0026 npm run dev",
                    "build":  "npm run build:backend \u0026\u0026 npm run build:frontend",
                    "build:prod":  "node scripts/build.js",
                    "build:backend":  "cd backend \u0026\u0026 npm run build",
                    "build:frontend":  "cd frontend \u0026\u0026 npm run build",
                    "install:all":  "npm install \u0026\u0026 cd backend \u0026\u0026 npm install \u0026\u0026 cd ../frontend \u0026\u0026 npm install",
                    "test":  "npm run test:backend \u0026\u0026 npm run test:frontend",
                    "test:backend":  "cd backend \u0026\u0026 npm test",
                    "test:frontend":  "cd frontend \u0026\u0026 npm test",
                    "test:watch":  "concurrently --names \"BACKEND,FRONTEND\" --prefix-colors \"blue,green\" \"npm run test:watch:backend\" \"npm run test:watch:frontend\"",
                    "test:watch:backend":  "cd backend \u0026\u0026 npm run test:watch",
                    "test:watch:frontend":  "cd frontend \u0026\u0026 npm run test:watch",
                    "lint":  "npm run lint:backend \u0026\u0026 npm run lint:frontend",
                    "lint:backend":  "cd backend \u0026\u0026 npm run lint",
                    "lint:frontend":  "cd frontend \u0026\u0026 npm run lint",
                    "lint:fix":  "npm run lint:fix:backend \u0026\u0026 npm run lint:fix:frontend",
                    "lint:fix:backend":  "cd backend \u0026\u0026 npm run lint:fix",
                    "lint:fix:frontend":  "cd frontend \u0026\u0026 npm run lint:fix",
                    "clean":  "rm -rf node_modules backend/node_modules frontend/node_modules backend/dist frontend/dist",
                    "clean:install":  "npm run clean \u0026\u0026 npm run install:all",
                    "docker:build":  "docker-compose build",
                    "docker:up":  "docker-compose up -d",
                    "docker:down":  "docker-compose down",
                    "docker:logs":  "docker-compose logs -f",
                    "docker:dev":  "docker-compose -f docker-compose.dev.yml up",
                    "docker:dev:build":  "docker-compose -f docker-compose.dev.yml build",
                    "docker:dev:down":  "docker-compose -f docker-compose.dev.yml down",
                    "docker:clean":  "docker-compose down -v --rmi all",
                    "server":  "node server.js",
                    "test-azure":  "node test-azure.js",\n    "test:backend-py:smoke": "node scripts/test_py_backend.js"
                },
    "devDependencies":  {
                            "concurrently":  "^8.2.2"
                        },
    "keywords":  [
                     "ai",
                     "virtual-try-on",
                     "react",
                     "express",
                     "monorepo"
                 ],
    "author":  "",
    "license":  "ISC"
}

